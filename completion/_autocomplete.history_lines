#autoload

local tag=history-lines
_tags $tag
_tags && _requested $tag ||
  return 1

(( $#words > 1 )) &&
  return 1
(( CURRENT > 1 )) &&
  return 1
[[ $curcontext == *(approximate|correct|spell)* ]] &&
  return 1

local -i max_lines
local word
if [[ $curcontext = history-search:* ]]; then
  (( max_lines = _autocomplete__max_lines() ))
  word=$words[1]
elif [[ -z $BUFFER ]]; then
  return 1
else
  max_lines=1
  word=${(b)words[1]}
fi

local -a hits displays=()
local numpat="[ [:digit:]](#c$#HISTNO)  "

local -aU events=()
local -a queries=( '*' ); [[ -z $BUFFER ]] ||
  queries=( '*(#ia'{0..7}")$~word*" )
local q; for q in $queries[@]; do
  hits=()
  print -v hits -f "%$#HISTNO.${#HISTNO}s  %s" "${(kv@)history[(R)$~q]}"
  events+=( ${hits[@]:#$~numpat$word} )
  [[ -n $events ]] &&
    break
done

events=( ${(@aO)events[1,max_lines]} )

displays=( $events[@] )
local -A subs=(
  '{ ;'   '{'
  '; }'   '}'
  ' () {' '() {'
  '= ()' '=()'
  $'\n'   '\n'
)
local k v num
local -i i wid=$(( $COLUMNS - 1 ))
for (( i = 1; i < ${#displays[@]}; i++ )); do
  num=${(M)displays[i]#$~numpat}
  displays[i]=${(Z+C+j: :)displays[i]#$num}
  for k v in ${(@kv)subs}; do
    displays[i]=${displays[i]//$k/$v}
  done
  displays[i]=${displays[i]// \;/\;}
  displays[i]=${(r:$wid:):-$num$displays[i]}
done

local -a suffix_opts=()
[[ $curcontext == history-search:* ]] &&
  suffix_opts=( -S ';' -r '^ ' )

local _comp_no_ignore=1
local expl
_description -2V $tag expl 'history match'
compadd "$expl[@]" -QU $suffix_opts -ld displays - ${${events[@]}##$~numpat}
